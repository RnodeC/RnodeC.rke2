---
- name: Add local-rke2.env file to server root homedir, for any local debugging
  ansible.builtin.copy:
    src: local-rke2.env
    dest: /root/local-rke2.env
    owner: root
    group: root
    mode: 0700
  become: true

- name: Ensure /opt/rke2 exists
  ansible.builtin.file:
    name: /opt/rke2
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

### local storage - applies to local or longhorn ###
- name: Ensure rke2_local_storage_path exists
  ansible.builtin.file:
    name: "{{ rke2_local_storage_path }}"
    state: directory
    owner: root
    group: root
    mode: 0777
  become: true
  when:
    - rke2_local_storage | default(false) | bool
    - rke2_local_storage_path is defined

- name: Ensure rke2_longhorn_storage_path exists
  ansible.builtin.file:
    name: "{{ rke2_longhorn_storage_path }}"
    state: directory
    owner: root
    group: root
    mode: 0777
  become: true
  when:
    - rke2_longhorn_storage | default(false) | bool
    - rke2_longhorn_storage_path is defined

### etcd user ###
- name: Create etcd user
  ansible.builtin.user:
    name: etcd
    comment: etcd user
    shell: /sbin/nologin
    create_home: no
    system: true
    uid: "{{ rke2_etcd_uid | default(omit) }}"
  become: true

### NetworkManager ###
- block:
  - name: Collect services fact
    ansible.builtin.service_facts:

  - name: Write rke2-canal.conf into /etc/NetworkManager/conf.d
    ansible.builtin.copy:
      src: rke2-canal.conf
      dest: /etc/NetworkManager/conf.d/rke2-canal.conf
      owner: root
      group: root
      mode: 0644
    notify: restart NetworkManager
    when: "'NetworkManager.service' in services and services['NetworkManager.service'].state == 'running'"
  become: true

### selinux (rhel only) ###
- block:
  #- name: Ensure SELinux policy management utilities are installed
  #  vars:
  #    ansible_python_interpreter: /usr/libexec/platform-python
  #  ansible.builtin.yum:
  #    name: 
  #      - policycoreutils-python-utils
  #      - python3-libselinux
  #    state: present

  - name: Download rke2's selinux rpm
    ansible.builtin.get_url:
      url: "https://github.com/rancher/rke2-selinux/releases/download/v{{ rke2_selinux_version }}.stable.1/rke2-selinux-{{ rke2_selinux_version }}-1.el{{ ansible_distribution_major_version }}.noarch.rpm"
      dest: /opt/rke2/rke2-selinux-v{{ rke2_selinux_version }}.rpm

  - name: Import rancher's gpg public key
    ansible.builtin.rpm_key:
      key: https://rpm.rancher.io/public.key
      state: present


  #- name: Install rke2 selinux rpm (rhel 8)
  #  ansible.builtin.dnf:
  #    name:  /opt/rke2/rke2-selinux-v{{ rke2_selinux_version }}.rpm
  #    state: present
  #  when: ansible_distribution_major_version == '8'

  - block:

    - name: Add SELinux file context to rke2_local_storage_path
      ansible.builtin.command:
        cmd: semanage fcontext -a -t container_file_t "{{ rke2_local_storage_path }}(/.*)?"
      changed_when: true

    - name: Apply SELinux file context to filesystem
      ansible.builtin.command:
        cmd: restorecon -Rv /var/data/
    when: rke2_local_storage | default(false) | bool

  - block:
    - name: Add SELinux file context to rke2_longhorn_storage_path
      ansible.builtin.command:
        cmd: semanage fcontext -a -t container_file_t "{{ rke2_longhorn_storage_path }}(/.*)?"
      changed_when: true

    - name: Apply SELinux file context to filesystem
      ansible.builtin.command:
        cmd: restorecon -Rv /var/data/
    when: rke2_longhorn_storage | default(false) | bool
  become: true
  when:
  - ansible_os_family == "RedHat"
  - rke2_selinux | default(false) | bool

### Some extra Longhorn requirements
- name: Setup for Longhorn
  include_tasks: setup-longhorn.yaml
  when: rke2_longhorn_storage | default(false) | bool